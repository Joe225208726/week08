# week08/.github/workflows/frontend_ci.yml

name: Frontend CI - Build & Push Image

on:
  # Manual trigger
  workflow_dispatch:

  # Automatically on pushes to main branch
  push:
    branches:
      - main
    paths: # Only trigger if changes are in the frontend directory
      - 'frontend/**'
      - '.github/workflows/frontend_ci.yml' # Trigger if this workflow file changes

# Define global environment variables that can be used across jobs
env:
  # ACR Login Server (e.g., myregistry.azurecr.io)
  # This needs to be set as a GitHub Repository Secret
  ACR_LOGIN_SERVER: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
  # Dynamically generate image tags based on Git SHA and GitHub Run ID
  # This provides unique, traceable tags for each image build
  IMAGE_TAG: ${{ github.sha }}-${{ github.run_id }}

jobs:
  build_and_push_images:
      runs-on: ubuntu-latest
      needs: test_and_lint_backends
  
      steps:
      - name: Checkout repository
        uses: actions/checkout@v4
  
      # This is the new step that uses your admin credentialss
      - name: Docker Login to ACR
        run: echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ env.ACR_LOGIN_SERVER }} -u "${{ secrets.ACR_USERNAME }}" --password-stdin
  
      # The build and push steps remain the same
      - name: Build and Push Product Service Image
        run: |
          docker build -t ${{ env.ACR_LOGIN_SERVER }}/product_service:latest ./backend/product_service/
          docker push ${{ env.ACR_LOGIN_SERVER }}/product_service:latest
  
      - name: Build and Push Order Service Image
        run: |
          docker build -t ${{ env.ACR_LOGIN_SERVER }}/order_service:latest ./backend/order_service/
          docker push ${{ env.ACR_LOGIN_SERVER }}/order_service:latest

    # Logout from Azure for security (runs even if image push fails)
    - name: Logout from Azure
      run: az logout
      if: always()
